HOME = Sys.getenv ("MULTIGWAS_HOME")
source('~/agrosavia/GWAS/MultiGWAS-dev/development/tests/gwas-summary/gwas-summary.R')
debugSource('~/agrosavia/GWAS/MultiGWAS-dev/development/tests/gwas-summary/gwas-summary.R')
#files =  list.files(inputDir, pattern=sprintf ("(^(tool).*(%s).*[.](csv))", gwasModel), full.names=T)
msgmsg ("Creating summary table...")
summaryTable = data.frame ()
#files =  list.files(inputDir, pattern=sprintf ("(^(tool).*(%s).*[.](csv))", gwasModel), full.names=T)
msgmsg ("Creating summary table...")
summaryTable = data.frame ()
tool=""
for (resultsFile in listOfResultsFile) {
data <- read.table (file=resultsFile, header=T)
#if (nrow(data)>nBest) data=data [1:nBest,]
flagNewData = F
if (grepl("GWASpoly", resultsFile)) {
tool    = "GWASpoly"
msgmsg (tool)
data    = selectBestModel (data, nBest, tool)
chrom   = data$Chrom
pos	    = data$Position
snps    = data$Marker
flagNewData = T
}else if (grepl ("PLINK", resultsFile)) {
tool    = "PLINK"
msgmsg (tool)
chrom   = data$CHR
pos	    = data$POS
snps    = data$SNP
flagNewData = T
}else if (grepl ("TASSEL", resultsFile)) {
tool    = "TASSEL"
msgmsg (tool)
data    = selectBestModel (data, nBest, tool)
chrom   = data$Chr
pos		= data$Pos
snps    = data$Marker
flagNewData = T
}else if (grepl ("SHEsis", resultsFile)) {
tool    = "SHEsis"
msgmsg (tool)
chrom   = data$CHR
pos     = data$POS
snps    = data$SNP
flagNewData = T
}
# Set values with general column names
model   = data$MODEL
gcs     = data$GC
pVal	= data$P
pscores = data$SCORE
tscores = data$THRESHOLD
signf   = pscores >= tscores
if (flagNewData==T) {
dfm = data.frame (TOOL=tool, MODEL=model, GC=gcs, SNP=snps, CHROM=chrom, POSITION=pos,
PVALUE = round (pVal,6), SCORE=round (pscores, 4), THRESHOLD=round (tscores,4), SIGNIFICANCE=signf )
#dfm = dfm %>% distinct (SNP, .keep_all=T)
dfm = dfm [!duplicated (dfm$SNP),]
if (nrow(dfm)>nBest) dfm=dfm [1:nBest,]
summaryTable <- rbind (summaryTable, dfm)
flagNewData = F
}
}
summaryTable = summaryTable [which(!is.na(summaryTable$SIGNIFICANCE)),]
summarySignificatives = summaryTable %>% filter (SIGNIFICANCE%in%T)
colnames (summaryTable)
View(summaryTable)
View(summaryTable)
debugSource('~/agrosavia/GWAS/MultiGWAS-dev/development/tests/gwas-summary/gwas-summary.R')
if (flagNewData==T) {
dfm = data.frame (TOOL=tool, MODEL=model, GC=gcs, SNP=snps, CHROM=chrom, POSITION=pos,
PVALUE = round (pVal,6), SCORE=round (pscores, 4), THRESHOLD=round (tscores,4), SIGNIFICANCE=signf )
#dfm = dfm %>% distinct (SNP, .keep_all=T)
dfm = dfm [!duplicated (dfm$SNP),]
if (nrow(dfm)>nBest) dfm=dfm [1:nBest,]
summaryTable <- rbind (summaryTable, dfm)
flagNewData = F
}
listOfResultsFile
flagNewData
resultsFile
debugSource('~/agrosavia/GWAS/MultiGWAS-dev/development/tests/gwas-summary/gwas-summary.R')
for (resultsFile in listOfResultsFile) {
data <- read.table (file=resultsFile, header=T)
#if (nrow(data)>nBest) data=data [1:nBest,]
flagNewData = F
if (grepl("GWASpoly", resultsFile)) {
tool    = "GWASpoly"
msgmsg (tool)
data    = selectBestModel (data, nBest, tool)
chrom   = data$Chrom
pos	    = data$Position
snps    = data$Marker
flagNewData = T
}else if (grepl ("PLINK", resultsFile)) {
tool    = "PLINK"
msgmsg (tool)
chrom   = data$CHR
pos	    = data$POS
snps    = data$SNP
flagNewData = T
}else if (grepl ("TASSEL", resultsFile)) {
tool    = "TASSEL"
msgmsg (tool)
data    = selectBestModel (data, nBest, tool)
chrom   = data$Chr
pos		= data$Pos
snps    = data$Marker
flagNewData = T
}else if (grepl ("SHEsis", resultsFile)) {
tool    = "SHEsis"
msgmsg (tool)
chrom   = data$CHR
pos     = data$POS
snps    = data$SNP
flagNewData = T
}
# Set values with general column names
model   = data$MODEL
gcs     = data$GC
pVal	= data$P
pscores = data$SCORE
tscores = data$THRESHOLD
signf   = pscores >= tscores
if (flagNewData==T) {
dfm = data.frame (TOOL=tool, MODEL=model, GC=gcs, SNP=snps, CHROM=chrom, POSITION=pos,
PVALUE = round (pVal,6), SCORE=round (pscores, 4), THRESHOLD=round (tscores,4), SIGNIFICANCE=signf )
#dfm = dfm %>% distinct (SNP, .keep_all=T)
dfm = dfm [!duplicated (dfm$SNP),]
if (nrow(dfm)>nBest) dfm=dfm [1:nBest,]
summaryTable <- rbind (summaryTable, dfm)
flagNewData = F
}
}
summaryTable = summaryTable [which(!is.na(summaryTable$SIGNIFICANCE)),]
debugSource('~/agrosavia/GWAS/MultiGWAS-dev/development/tests/gwas-summary/gwas-summary.R')
summarySignificatives = summaryTable %>% filter (SIGNIFICANCE%in%T)
debugSource('~/agrosavia/GWAS/MultiGWAS-dev/development/tests/gwas-summary/gwas-summary.R')
return (list (best=summaryTable, significatives=summarySignificatives))
debugSource('~/agrosavia/GWAS/MultiGWAS-dev/development/tests/gwas-summary/gwas-summary.R')
#files =  list.files(inputDir, pattern=sprintf ("(^(tool).*(%s).*[.](csv))", gwasModel), full.names=T)
msgmsg ("Creating summary table...")
summaryTable = data.frame ()
tool=""
listOfResultsFile
for (resultsFile in listOfResultsFile) {
data <- read.table (file=resultsFile, header=T)
#if (nrow(data)>nBest) data=data [1:nBest,]
flagNewData = F
if (grepl("GWASpoly", resultsFile)) {
tool    = "GWASpoly"
msgmsg (tool)
data    = selectBestModel (data, nBest, tool)
chrom   = data$Chrom
pos	    = data$Position
snps    = data$Marker
flagNewData = T
}else if (grepl ("PLINK", resultsFile)) {
tool    = "PLINK"
msgmsg (tool)
chrom   = data$CHR
pos	    = data$POS
snps    = data$SNP
flagNewData = T
}else if (grepl ("TASSEL", resultsFile)) {
tool    = "TASSEL"
msgmsg (tool)
data    = selectBestModel (data, nBest, tool)
chrom   = data$Chr
pos		= data$Pos
snps    = data$Marker
flagNewData = T
}else if (grepl ("SHEsis", resultsFile)) {
tool    = "SHEsis"
msgmsg (tool)
chrom   = data$CHR
pos     = data$POS
snps    = data$SNP
flagNewData = T
}
# Set values with general column names
model   = data$MODEL
gcs     = data$GC
pVal	= data$P
pscores = data$SCORE
tscores = data$THRESHOLD
signf   = pscores >= tscores
if (flagNewData==T) {
dfm = data.frame (TOOL=tool, MODEL=model, GC=gcs, SNP=snps, CHROM=chrom, POSITION=pos,
PVALUE = round (pVal,6), SCORE=round (pscores, 4), THRESHOLD=round (tscores,4), SIGNIFICANCE=signf )
#dfm = dfm %>% distinct (SNP, .keep_all=T)
dfm = dfm [!duplicated (dfm$SNP),]
if (nrow(dfm)>nBest) dfm=dfm [1:nBest,]
summaryTable <- rbind (summaryTable, dfm)
flagNewData = F
}
}
dim (data)
resultsFile
dt=read.table (file=resultsFile, header=T)
dim (dt)
dim (data)
flagNewData
flagNewData
